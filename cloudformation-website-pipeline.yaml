AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template for CloudWatch Logs, DynamoDB, EC2, Load Balancer, Auto Scaling, and Real-Time Analytics.

Resources:
  FrontendS3Bucket:
    Type: AWS::S3::Bucket

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MyTable
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  # CloudWatch Log Group
  CloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /the_app/logs
      RetentionInDays: 30

  # Launch Template for Auto Scaling
  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: MyLaunchTemplate
      LaunchTemplateData:
        ImageId: ami-05edb7c94b324f73c  
        InstanceType: t3.micro         
        SecurityGroupIds:
          - sg-002f5a2e1c10ce54a        
        KeyName: bidding               
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            echo "Hello, World!" > /tmp/hello.txt

  # Auto Scaling Group
  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: !GetAtt MyLaunchTemplate.LatestVersionNumber
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 2
      VPCZoneIdentifier:
        - subnet-092d0d335b3d7ad0a  # Replace with your Subnet ID
        - subnet-03c1c466698b3a209  # Replace with another Subnet ID
      TargetGroupARNs:
        - !Ref MyTargetGroup

  # Load Balancer
  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - subnet-092d0d335b3d7ad0a  # Replace with your Subnet ID
        - subnet-03c1c466698b3a209  # Replace with another Subnet ID
      SecurityGroups:
        - sg-002f5a2e1c10ce54a      # Replace with your Security Group ID
      Scheme: internet-facing       # Use 'internal' for an internal load balancer
      Type: application             # Use 'network' for a Network Load Balancer

  # Target Group
  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: vpc-0b92707bcabd82204  # Replace with your VPC ID
      HealthCheckPath: /            # Health check path
      HealthCheckPort: 80           # Health check port
      HealthCheckProtocol: HTTP     # Health check protocol

  # Listener for Load Balancer
  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyTargetGroup
             
Outputs:
  CloudWatchLogGroup:
    Description: "CloudWatch Log Group Name"
    Value: !Ref CloudWatchLogGroup

  DynamoDBTableName:
    Description: "DynamoDB Table Name"
    Value: !Ref DynamoDBTable

  LoadBalancerDNS:
    Description: "Load Balancer DNS Name"
    Value: !GetAtt MyLoadBalancer.DNSName

  AutoScalingGroupName:
    Description: "Auto Scaling Group Name"
    Value: !Ref MyAutoScalingGroup

  KinesisStreamName:
    Description: "Kinesis Data Stream Name"
    Value: !Ref MyKinesisStream
