AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template for CloudWatch Logs.

Parameters:
  Subnet1:
    Type: AWS::EC2::Subnet::Id
    Description: "First public subnet for the Load Balancer"
  Subnet2:
    Type: AWS::EC2::Subnet::Id
    Description: "Second public subnet for the Load Balancer"
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: "VPC ID for the resources"
    
Resources:
  FrontendS3Bucket:
    Type: AWS::S3::Bucket
    
  # CloudWatch Log Group
  CloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /the_app/logs
      RetentionInDays: 30

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MyTable
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
      SecurityGroups:
        - sg-03c89b66ae30cc15b  # Replace with your Security Group ID

LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: MyLaunchTemplate
      LaunchTemplateData:
        ImageId: ami-08b1d20c6a69a7100
        InstanceType: t2.micro
        SecurityGroupIds:
          - sg-03c89b66ae30cc15b
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            echo "Hello, World!" > /tmp/hello.txt

Outputs:
  CloudWatchLogGroup:
    Description: "CloudWatch Log Group Name"
    Value: !Ref CloudWatchLogGroup

  DynamoDBTableName:
    Description: "DynamoDB Table Name"
    Value: !Ref DynamoDBTable

  LoadBalancerDNS:
    Description: "Load Balancer DNS Name"
    Value: !GetAtt LoadBalancer.DNSName

